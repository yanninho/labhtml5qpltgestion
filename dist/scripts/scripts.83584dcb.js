"use strict";angular.module("qpltgestion",["ngAnimate","ngAria","ngCookies","ngMessages","ngResource","ngRoute","ngSanitize","ngTouch","happyRestClient","config","ngMaterial","LocalStorageModule","infinite-scroll"]).config(["$routeProvider","$httpProvider","$locationProvider","localStorageServiceProvider",function(a,b,c,d){d.setPrefix("qpltgestion").setStorageType("sessionStorage").setNotify(!0,!0),c.html5Mode(!0).hashPrefix("!"),b.interceptors.push("loginInterceptor"),a.when("/",{templateUrl:"views/main.html",controller:"MainCtrl",controllerAs:"main"}).when("/about",{templateUrl:"views/about.html",controller:"AboutCtrl",controllerAs:"about"}).when("/magasins",{templateUrl:"views/magasins.html",controller:"MagasinsCtrl",controllerAs:"magasins"}).when("/login",{templateUrl:"views/login.html",controller:"LoginCtrl",controllerAs:"login"}).when("/logged",{templateUrl:"views/logged.html",controller:"LoggedCtrl",controllerAs:"logged"}).when("/signup",{templateUrl:"views/signup.html",controller:"SignupCtrl",controllerAs:"signup"}).otherwise({redirectTo:"/"})}]).run(["$rootScope","$location",function(a,b){a.$on("loginRequired",function(){b.path("/login")}),a.$on("loggedSuccess",function(){b.path("/logged")})}]),angular.module("qpltgestion").controller("MainCtrl",function(){}),angular.module("qpltgestion").controller("MagasinsCtrl",["$scope","happyRestService","ENV",function(a,b,c){a.env=c,a.rangeNumber=25,a.ranges=[25,50,75,100,150,200],a.loading=!0,a.magasinDirection="prev",a.marques=null,a.selectedMarque=null,a.defilements=[{text:"Pagination",value:"page"},{text:"Infinite-scroll",value:"infinite"}],a.selectedDefilement=a.defilements[0].value;var d=function(){a.easyConfigMagasins=b.getEasyConfig(),a.easyConfigMagasins.url=c.urlBackend+"/v2/magasins",e(),f()},e=function(){a.easyConfigMagasins.range=[],a.easyConfigMagasins.range.push(0),a.easyConfigMagasins.range.push(a.rangeNumber-1)},f=function(){a.easyConfigMagasins.fields=[],a.easyConfigMagasins.fields.push("adresse"),a.easyConfigMagasins.fields.push("marque"),a.easyConfigMagasins.fields.push("location")},g=function(){var d=b.getEasyConfig();d.url=c.urlBackend+"/v2/marques",d.fields.push("nom"),d.sorts.push("nom");var e=b.easyCall(d);e.then(function(b){a.marques=b.data})},h=function(){var b=i;return a.selectedDefilement===a.defilements[1].value&&(b=j),b},i=function(b){a.loading=!1,a.result=b},j=function(b){a.loading=!1;var c=b.data;delete b.data;for(var d in b)a.result[d]=b[d];for(var e=0;e<c.length;e++)a.result.data.push(c[e])},k=function(c){a.loading=!0;var d=b.easyCall(a.easyConfigMagasins);d.then(c,function(b){console.log(b),a.loading=!1})};a.setPage=function(b){angular.isDefined(a.result)&&angular.isDefined(a.result[b])&&(a.easyConfigMagasins.range=a.result[b],k(i))};var l=function(b){for(var c=-1,d=0;d<a.easyConfigMagasins.filters.length;d++)a.easyConfigMagasins.filters[d][0]===b&&(c=d);return c};a.changedMarque=function(b){var c=!1;if(null===b){a.selectedMarque=null;var d=l("marque.nom");d>-1&&(c=!0,a.easyConfigMagasins.filters.splice(d,1))}else c=!0,a.easyConfigMagasins.filters.push(["marque.nom",[b]]);c&&(e(),k(h()))},a.sendSearch=function(b){var c=!1;if(b.length>2)a.easyConfigMagasins.filters.push(["adresse",["*"+b+"*"]]),c=!0;else{var d=l("adresse");d>-1&&(a.easyConfigMagasins.filters.splice(d,1),c=!0)}c&&(e(),k(h()))},a.infiniteNextPage=function(){"infinite"===a.selectedDefilement&&void 0!==a.result&&void 0!==a.result.nextPage&&(a.easyConfigMagasins.range=a.result.nextPage,k(j))},a.changeDefilement=function(b){a.selectedDefilement=b,e(),a.result.data=[],k(h())},a.changeRange=function(b){a.rangeNumber=b,e(),k(h())},d(),k(h()),g()}]),angular.module("config",[]).constant("ENV",{name:"production",urlBackend:"http://labhtml5qpltbackend.herokuapp.com",logosPath:"/static/images/logosMarques/"}),angular.module("qpltgestion").controller("ToolbarCtrl",["$scope","$mdSidenav","$mdUtil","$location","session",function(a,b,c,d,e){function f(a){var d=c.debounce(function(){b(a).toggle().then(function(){})},300);return d}a.toggleRight=f("right"),a.session=e,a.login=function(){d.path("/login")},a.logout=function(){e.clear(),d.path("/")},a.signup=function(){d.path("/signup")},a.closeNav=function(){},a.go=function(a){d.search("token",null),d.path(a)}}]),angular.module("qpltgestion").controller("LoginCtrl",["$scope","$http","$location","ENV","session",function(a,b,c,d,e){a.env=d,a.login=function(){b({method:"POST",url:d.urlBackend+"/v2/auth/local/login",data:a.user}).then(function(a){var b=a.data;e.setToken(b.token),e.setUser(b),c.path("/logged")},function(a){})}}]),angular.module("qpltgestion").factory("loginInterceptor",["$q","$rootScope","session","$injector",function(a,b,c,d){return{request:function(a){return null!==c.getToken()&&(a.headers.Authorization="Bearer "+c.getToken()),a},requestError:function(b){return a.reject(b)},response:function(a){var c=d.get("$route");return angular.isDefined(c.current.params.token)&&b.$emit("loggedSuccess"),a},responseError:function(c){return console.log(c),401===c.status&&b.$emit("loginRequired"),a.reject(c)}}}]),angular.module("qpltgestion").factory("session",["localStorageService",function(a){return{getToken:function(){return a.get("token")},setToken:function(b){a.set("token",b)},getUser:function(){return a.get("user")},setUser:function(b){a.set("user",b)},clear:function(){a.clearAll()}}}]),angular.module("qpltgestion").controller("LoggedCtrl",["$scope","$route","$location","ENV","$http","session",function(a,b,c,d,e,f){var g=b.current.params.token;angular.isUndefined(g)&&null===f.getToken()?c.path("/login"):null===f.getToken()||angular.isDefined(g)&&f.getToken()!==g?(f.setToken(g),e.get(d.urlBackend+"/v2/user/"+g).then(function(b){404===b.status&&c.path("/login"),f.setUser(b.data),a.session=f},function(a){console.log(a)})):a.session=f}]),angular.module("qpltgestion").controller("SignupCtrl",["$scope","$http","$location","ENV","session",function(a,b,c,d,e){a.signup=function(){delete a.user.confirmPassword,b({method:"PUT",url:d.urlBackend+"/v2/user",data:a.user}).then(function(a){var b=a.data;e.setToken(b.token),e.setUser(b),c.path("/logged")},function(a){})}}]),angular.module("qpltgestion").directive("passwordVerify",function(){return{require:"ngModel",scope:{passwordVerify:"="},link:function(a,b,c,d){a.$watch(function(){var b;return(a.passwordVerify||d.$viewValue)&&(b=a.passwordVerify+"_"+d.$viewValue),b},function(b){b&&d.$parsers.unshift(function(b){var c=a.passwordVerify;return c!==b?void d.$setValidity("passwordVerify",!1):(d.$setValidity("passwordVerify",!0),b)})})}}}),angular.module("qpltgestion").run(["$templateCache",function(a){a.put("views/logged.html",'<div class="logged" layout="column" layout-padding layout-margin> <div flex class="infos"> <img ng-src="{{session.getUser().photo}}"> <md-icon ng-if="!session.getUser().photo" class="icon mdi" md-font-icon="mdi-account-circle"></md-icon> <h3> {{session.getUser().firstName}} {{session.getUser().lastName}} </h3> <h3> {{session.getUser().displayName}} </h3> <h4> {{session.getUser().email}} </h4> <h5>Merci! Vous êtes connecté.</h5> </div> </div>'),a.put("views/login.html",'<div class="login" layout="column" layout-padding layout-margin ng-controller="LoginCtrl"> <!-- <md-icon class="icon"  md-svg-icon="images/ic_account_circle_48px.svg"></md-icon> --> <md-icon class="icon mdi" md-font-icon="mdi-account-circle"></md-icon> <form name="userForm" ng-submit="login()" layout="column" layout-padding layout-margin> <md-input-container> <label>Adresse email</label> <input ng-model="user.email" type="email" required autofocus> </md-input-container> <md-input-container> <label>Mot de passe</label> <input ng-model="user.password" type="password" required min-length="8"> </md-input-container> <md-button class="md-raised md-primary" type="submit" ng-disabled="userForm.$invalid">Se connecter</md-button> </form> <md-whiteframe class="easy-connect"> <p>Connectez-vous facilement avec :</p> <div layout="row"> <md-button flex class="md-raised" ng-href="{{env.urlBackend}}/v2/auth/google"><md-icon class="icons mdi google" md-font-icon="mdi-google"></md-icon></md-button> <md-button flex class="md-raised" ng-href="{{env.urlBackend}}/v2/auth/facebook"><md-icon class="icons mdi facebook" md-font-icon="mdi-facebook"></md-icon></md-button> </div> </md-whiteframe> </div>'),a.put("views/magasins.html",'<md-list class="magasins" ng-if="result"> <div class="header" layout="row" layout-sm="column" layout-padding layout-margin> <md-whiteframe flex layout="row" class="md-whiteframe-z2"> <div flex="10"> <md-icon class="mdi" md-font-icon="mdi-format-line-spacing"></md-icon> </div> <div flex> <div> <md-select placeholder="Défilement" ng-model="selectedDefilement" ng-change="changeDefilement(selectedDefilement)"> <md-option ng-value="defilement.value" ng-repeat="defilement in defilements">{{defilement.text}}</md-option> </md-select> </div> <div class="infinite" ng-hide="selectedDefilement == \'page\'"> <p>Chargement dynamique : faites simplement défiler la liste, les éléments se chargent au fur et à mesure.</p> </div> <div class="pagination" ng-show="selectedDefilement == \'page\'"> <md-button class="md-icon-button" ng-click="magasinDirection = \'prev\' ; setPage(\'firstPage\')"> <md-icon class="mdi" md-font-icon="mdi-arrow-left-bold"></md-icon> </md-button> <md-button class="md-icon-button" ng-disabled="!result.previousPage" ng-click="magasinDirection = \'prev\' ; setPage(\'previousPage\')"> <md-icon class="mdi" md-font-icon="mdi-arrow-left"></md-icon> </md-button> <md-button class="md-icon-button" ng-disabled="!result.nextPage" ng-click="magasinDirection = \'next\' ; setPage(\'nextPage\')"> <md-icon class="mdi" md-font-icon="mdi-arrow-right"></md-icon> </md-button> <md-button class="md-icon-button" ng-click="magasinDirection = \'next\' ; setPage(\'lastPage\')"> <md-icon class="mdi" md-font-icon="mdi-arrow-right-bold"></md-icon> </md-button> <md-select placeholder="Nombre par page" ng-model="rangeNumber" ng-change="changeRange(rangeNumber)"> <md-option ng-value="range" ng-repeat="range in ranges">{{range}}</md-option> </md-select> <p><span>{{result.beginResult + 1}} à {{result.endResult + 1}} sur {{result.totalRecords}}</span></p> </div> </div> </md-whiteframe> <md-whiteframe flex layout="row" class="md-whiteframe-z2"> <div flex="10"> <md-icon class="mdi" md-font-icon="mdi-filter"></md-icon> </div> <div flex> <md-select placeholder="Marques" ng-model="selectedMarque" ng-change="changedMarque(selectedMarque)" md-on-open="getMarques()"> <md-option ng-value="marque.nom" ng-repeat="marque in marques">{{marque.nom}}</md-option> </md-select> <md-button ng-click="changedMarque(null)">Effacer</md-button> </div> </md-whiteframe> <md-whiteframe flex layout="row" class="md-whiteframe-z2"> <div flex="10"> <md-icon class="mdi" md-font-icon="mdi-magnify"></md-icon> </div> <md-input-container flex> <input placeholder="Recherche" ng-model="search" ng-change="sendSearch(search)" ng-disabled="loading"> </md-input-container> </md-whiteframe> </div> <div infinite-scroll="infiniteNextPage()" infinite-scroll-distance="0"> <md-list-item ng-class="{\'magasin-animate-prev\': magasinDirection == \'prev\', \'magasin-animate-next\': magasinDirection == \'next\'}" class="magasin-animate magasin md-whiteframe-z2 md-2-line" ng-repeat="magasin in result.data"> <img ng-src="{{env.urlBackend}}{{env.logosPath}}{{magasin.marque.logo}}" class="md-avatar" alt="{{magasin.marque.nom}}"> <div class="md-list-item-text" layout="row" layout-sm="column" layout-md="column" layout-margin layout-fill layout-padding> <div flex class="infos"> <h3>{{ magasin.adresse }}</h3> <p>{{ magasin.marque.nom }}</p> </div> <div flex class="map"> <img ng-src="http://staticmap.openstreetmap.de/staticmap.php?center=46.52863469527167,2.43896484375&zoom=4&size=180x180&maptype=osmarenderer&markers={{magasin.location[1]}},{{magasin.location[0]}},lightblue"> </div> </div> </md-list-item> </div> <div layout="row" flex layout-align="center center" ng-show="loading"> <div> <md-progress-circular md-mode="indeterminate" md-diameter="40"></md-progress-circular> </div> </div> </md-list>'),a.put("views/main.html",""),a.put("views/signup.html",'<div class="signup" layout="column" layout-padding layout-margin ng-controller="SignupCtrl"> <md-icon class="icon mdi" md-font-icon="mdi-account-circle"></md-icon> <form name="userForm" ng-submit="signup()" layout="column" layout-padding layout-margin> <md-input-container> <label>Prénom</label> <input ng-model="user.firstName" required autofocus> </md-input-container> <md-input-container> <label>Nom</label> <input ng-model="user.lastName" required> </md-input-container> <md-input-container> <label>Adresse Email</label> <input ng-model="user.email" type="email" required> </md-input-container> <md-input-container> <label>Mot de passe</label> <input ng-model="user.password" type="password" required ng-minlength="8"> </md-input-container> <md-input-container> <label>Confirmation du mot de passe</label> <input ng-model="user.confirmPassword" type="password" required password-verify="user.password"> </md-input-container> <md-button class="md-raised md-primary" ng-disabled="userForm.$invalid">Créer le compte</md-button> </form> </div>')}]);